# allows me to chose players to add to team
class Player:
    def __init__(self, player_id, name, role, country):
        self.player_id = player_id
        self.name = name
        self.role = role  # Example roles: Batsman, Bowler, All-rounder, Wicketkeeper
        self.country = country
        self.is_active = True

    def __str__(self):
        status = "Active" if self.is_active else "Inactive"
        return (f"Player ID: {self.player_id}\n"
                f"Name: {self.name}\n"
                f"Role: {self.role}\n"
                f"Country: {self.country}\n"
                f"Status: {status}")


class Team:
    def __init__(self, manager, team_name, league):
        self.manager = manager
        self.team_name = team_name
        self.league = league
        self.players = []

    def add_player(self,player):
        self.players.append(player)
        
    def remove_player(self,player_id):
        self.players = [player for player in self.players if player.player_id!= player_id]    #make sure player_id is that of player we want to remove from the to team

    def __str__(self):
        return (f"Manager Name: {self.manager}\n"
               f"Team Name: {self.team_name}\n"
               f"League: {self.league}\n"
               f"Players: {[player.name for player in self.players]}")

class CricketCollection:
    def __init__(self):
        self.players = []
        self.teams = {}

    def add_player(self):
        player_id = input("Enter Player ID: ")
        name = input("Enter Player Name: ")
        role = input("Enter Player Role (e.g., Batsman, Bowler, All-rounder): ")
        country = input("Enter country of origin: ")
        player = Player(player_id, name, role, country)
        self.players.append(player)
        print(f"Player '{name}' has been added to the collection.\n")

    def list_players(self):
        if not self.players:
            print("No players in the collection.\n")
        else:
            for player in self.players:
                print(player)

    def update_player(self):
        player_id = input("Enter Player ID to update: ")
        for player in self.players:
            if player.player_id == player_id:
                name = input(f"Enter new name (current: {player.name}) or leave blank: ")
                role = input(f"Enter new role (current: {player.role}) or leave blank: ")
                country = input(f"Enter new country (current: {player.country}) or leave blank: ")
                if name:
                    player.name = name
                if role:
                    player.role = role
                if country:
                    player.country = country
                print(f"Player '{player_id}' has been updated.\n")
                return
        print("Player not found.\n")

    def deactivate_player(self):
        player_id = input("Enter Player ID to deactivate: ")
        for player in self.players:
            if player.player_id == player_id and player.is_active:
                player.is_active = False
                print(f"Player '{player.name}' has been deactivated.\n")
                return
        print("Player not found or already inactive.\n")

    def add_team(self):
        manager = input("Enter Manager name: ")
        team_name = input("Enter team name: ")
        league = input("Enter league: ")
        if manager in self.teams:
            print(f"Manager: '{manager}' already has team.\n")
            return
        team = Team(manager, team_name, league)
        self.teams[manager] = team
        print(f" Team '{team_name}' has been added.\n")

    def list_team(self):
        if not self.teams:
            print("No teams in the collection.\n")
        else:
            for team in self.teams.values():
                print(team)


    def assign_player_to_team(self):
        manager = input("Enter the manager name to assign a player: ")
        if manager not in self.teams:
            print("Team not found.\n")
            return

        player_id = input("Enter the Player ID to assign: ")
        player = next((p for p in self.players if p.player_id == player_id and p.is_active), None)
        if not player:
            print("Player not found or inactive.\n")
            return

        team = self.teams[manager]
        if player in team.players:
            print(f"Player '{player.name}' is already in the team '{manager}'.\n")
        else:
            team.add_player(player)
            print(f"Player '{player.name}' has been assigned to team '{manager}'.\n")

    def list_team_players(self):
        manager = input("Enter the manager name to list its players: ")
        if manager not in self.teams:
            print("Team not found.\n")
            return

        team = self.teams[manager]
        if not team.players:
            print(f"Team '{team.team_namw}' has no players assigned.\n")
        else:
            print(f"Players in team '{team.team_name}':")
            for player in team.players:
                print(player)

    def remove_player_from_team(self):
        manager = input("Enter the team name to remove a player from: ")
        if manager not in self.teams:
            print("Team not found.\n")
            return

        player_id = input("Enter the Player ID to remove: ")
        team = self.teams[manager]
        if any(player.player_id == player_id for player in team.players):
            team.remove_player(player_id)
            print(f"Player with ID '{player_id}' has been removed from team '{team.team_name}'.\n")
        else:
            print(f"Player with ID '{player_id}' not found in team '{team.team_name}'.\n")
        

    def menu(self):
        while True:
            print("\n**** Cricket Collection Manager ****")
            print("1. Add a Player")
            print("2. List All Players")
            print("3. Update a Player")
            print("4. Deactivate a Player")
            print("5. Add a Team")
            print("6. List All Teams")
            print("7. Assign a Player to a Team")
            print("8. List Players in a Team")
            print("9. Remove a Player from a Team")
            print("10. Exit\n")
            choice = input("Choose an option (1-10): ")

            if choice == '1':
                self.add_player()
            elif choice == '2':
                self.list_players()
            elif choice == '3':
                self.update_player()
            elif choice == '4':
                self.deactivate_player()
            elif choice == '5':
                self.add_team()
            elif choice == '6':
                self.list_team()
            elif choice == '7':
                self.assign_player_to_team()
            elif choice == '8':
                self.list_team_players()
            elif choice == '9':
                self.remove_player_from_team()
            elif choice == '10':
                print("Goodbye!")
                break
            else:
                print("Invalid choice. Please try again.\n")


# Run the menu
collection = CricketCollection()
collection.menu()
